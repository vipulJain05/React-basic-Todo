name: Manual-cypress

on:
  workflow_dispatch:
    inputs:
      cluster_to_deploy:
        description: "Choose cluster to deploy to"
        required: true
        default: "test"
      tags:
        description: 'Run Cypress Test'
        required: false 
        type: boolean
        default: true
jobs:

  test:
    name: cypress-run
    # run: echo "${{ github.event.inputs.tags }}"
    if: ${{ github.event.label.name == 'cypress test ready' }} || ${{github.event.pull_request}}
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     # count can be increased once we increase tests
    #     # e.g. [1,2,3]
    #     containers: [1,2,3,4]
    steps:
      - name: Set time
        run: |
          echo "${{ github.event.inputs.tags }}"
      # - name: Checkout
      #   uses: actions/checkout@v2

    #   - name: Increase file watchers
    #     run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

    #   - name: Curate cypress config
    #     run: mv packages/web-app/cypress.ghactions.json packages/web-app/cypress.json


    #   - name: Cypress run 2
    #     uses: cypress-io/github-action@v2

    #     with:
    #       start: "yarn ws:app start:ghactions"
    #       wait-on: "http://localhost:3000"

    #       # hardcoded timeout to wait for 400 seconds before pinging local server
    #       wait-on-timeout: 400
    #       command: yarn ws:app cy:run 

    #   - name: Upload ss
    #     uses: actions/upload-artifact@v2
    #     if: failure()
    #     with:
    #       name: cypress-screenshots
    #       path: /home/runner/work/mmc-react-web/mmc-react-web/packages/web-app/cypress/screenshots/**
    #       retention-days: 1
      
    #   - name: Upload Videos
    #     uses: actions/upload-artifact@v2
    #     if: failure()
    #     with:
    #       name: cypress-videos
    #       path: /home/runner/work/mmc-react-web/mmc-react-web/packages/web-app/cypress/videos/**
    #       retention-days: 1

  build:
    # if: ${{ github.event.label.name == 'cypress test ready' }} || ${{github.event.pull_request}}
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v2

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2

    - name: Set time
      run: |
        echo ""${{ needs.test.outputs.job-status }}""